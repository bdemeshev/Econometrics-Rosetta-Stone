[
["index.html", "Розеттский камень Коан 1 Напутственное слово", " Розеттский камень Пуассон, фея и три мексиканских негодяя 2020-01-16 Коан 1 Напутственное слово pre.r { background-color: #FEF9E7 !important; } pre.stata { background-color: #BDBDBD !important; } pre.python { background-color: #FDF2E9 !important; } "],
["installsoft.html", "Коан 2 Коан об установке софта 2.1 Язык программирования R", " Коан 2 Коан об установке софта В этом коане мы рассмотрим установку и настройку программ для работы на языках программирования R и Python, а также установку и настройку программы Stata. 2.1 Язык программирования R R — это открытая среда программирования, помогающая в работе со статистическими данными. Для программирования на R подойдет программа RStudio. Рассмотрим установку RStudio на Mac OS и Windows. 2.1.1 Инструкция по установке RStudio для Windows / Mac OS: Загрузите и установите язык программирования R с официального сайта. Версия для Windows: Выберите “Download R for Windows” ▶ “base” ▶ “Download R 3.x.x for Windows”. Версия для Mac OS: Выберите “Download R for (Mac) OS X” ▶ “Latest Release” ▶ “R 3.x.x”. Загрузите программу RStudio с официального сайта разработчика (выберите подходящую версию из предложенных опций). Возможностей бесплатной версии будет вполне достаточно для работы. Страница загрузки 2.1.2 Начало работы Интерфейс программы New file - Создание нового файла. New project - Создание нового проекта. Open file - Открытие существующего файла. Console - Консоль, в которой набирается код. Files - Список файлов, доступных для работы. Packages - Список установленных пакетов, т.е. расширений. Также можно ознакомиться с ним, введя в консоль команду installed.packages(). Viewer - Отображение введенного кода. 2.1.3 Настройка программы1 Запустите RStudio. В разделе Tools — Global Options — Sweave — “Weave .Rnw files using” выберите knitr. Перед началом работы рекомендуется также установить ряд пакетов, то есть расширений, которые помогут при работе с данными. Для этого необходимо ввести в командную строку следующую команду: install.packages(c(&quot;vcd&quot;, &quot;ggplot2&quot;, &quot;knitr&quot;, &quot;xtable&quot;, &quot;texreg&quot;, &quot;lmtest&quot;, &quot;sandwich&quot;, &quot;erer&quot;, &quot;dplyr&quot;, &quot;readxl&quot;, &quot;reshape2&quot;, &quot;RCurl&quot;, &quot;RSelenium&quot;,&quot;XML&quot;, &quot;jsonlite&quot;, &quot;quantmod&quot;, &quot;lubridate&quot;, &quot;stringr&quot;, &quot;tidyr&quot;)) После выполнения команды все рекомендованные для использования пакеты установятся автоматически. При работе на Windows для установки пакетов может потребоваться запуск Rstudio от имени администратора (для этого необходимо кликнуть правой кнопкой мыши, выбрать “Запуск от имени администратора”). Установили? Отлично. Всё готово для использования RStudio на вашем компьютере. 2.1.4 Язык программирования Python Python — это открытая среда программирования, помогающая в работе со статистическими данными. Для программирования на Python подойдет программа Jupyter Notebook. 2.1.5 Установка Загрузите и установите Anaconda с официального сайта. После загрузки и установки откройте Anaconda Navigator, через который Вы сможете открыть программу Jupyter Notebook. Интерфейс Anaconda Navigator 2.1.6 Начало работы Открыв Jupyter Notebook, вы попадете на страницу, содержащую ваши сохраненные файлы. Чтобы создать новый файл, нажмите “New” ▶ “Notebook: Python 3”. Новый файл Затем, в открывшемся окне, появится новый файл. Теперь все готово к работе. Вы можете вводить свой код и затем, используя комбинацию клавиш &lt;Shift&gt; + &lt;Enter&gt;, проверять его исполнение. Ввод кода 2.1.7 Программа STATA Stata, в отличие от R и Python, является программой, а не языком программирования. Она также помогает в работе со статистическими данными. 2.1.8 Установка: Для установки Stata необходимо загрузить актуальную версию с сайта компании-разработчика. Подойдут как Stata SE, так и Stata MP. 2.1.9 Начало работы: Интерфейс Stata Open File - открыть файл. Save - сохранить файл. Data Editor - редактирование данных. Data Browser - просмотр данных. Variables - список переменных. Command - командная строка, в которой вводится код. Источник: https://github.com/bdemeshev/em301/wiki/R↩ "],
["simplereg.html", "Коан 3 Коан о простой линейной регрессии 3.1 R 3.2 Python 3.3 Stata", " Коан 3 Коан о простой линейной регрессии 3.1 R Построим простую линейную регрессию в R и проведем несложные тесты. Загрузим необходимые пакеты. library(tidyverse) # манипуляции с данными и построение графиков library(sjPlot) # красивые графики для линейных моделей library(skimr) # симпатичное summary library(rio) # чтение .dta файлов library(car) # проверка линейных гипотез library(tseries) # тест Харке-Бера Импортируем данные. df = import(&quot;data/us-return.dta&quot;) Error in import(&quot;data/us-return.dta&quot;): No such file Исследуем наш датасет. skim(df) # добавить select Error in as.data.frame.default(data): cannot coerce class &#39;&quot;function&quot;&#39; to a data.frame Переименуем столбцы. df = rename(df, n = A, date = B) Error in UseMethod(&quot;rename_&quot;): no applicable method for &#39;rename_&#39; applied to an object of class &quot;function&quot; И уберем строчки, в которых хотя бы один элемент пустой. df = na.omit(df) Будем верить в CAPM :) (в начале объяснить, что такое capm) Оценим параметры модели для компании MOTOR. Тогда зависимая переменная - разница доходностей акций MOTOR и безрискового актива, а регрессор - рыночная премия. df = mutate(df, y = MOTOR - RKFREE, x = MARKET - RKFREE) # придумать говорящие названия Error in UseMethod(&quot;mutate_&quot;): no applicable method for &#39;mutate_&#39; applied to an object of class &quot;function&quot; Оценим нашу модель и проверим гипотезу об адекватности регрессии. ols = lm(y ~ x, data = df) Error in as.data.frame.default(data, optional = TRUE): cannot coerce class &#39;&quot;function&quot;&#39; to a data.frame summary(ols) Error in summary(ols): object &#39;ols&#39; not found Вызовом одной функции получаем кучу полезных графиков :) Можем визуально оценить наличие гетероскедастичности, нормальность распределения остатков, наличие выбросов. plot(ols) # добавить, что значит каждый график, после Error in plot(ols): object &#39;ols&#39; not found Строим 90%-й доверительный интервал для параметров модели. confint(ols, level = 0.9) Error in confint(ols, level = 0.9): object &#39;ols&#39; not found Проверим гипотезу о равенстве коэффициента при регрессоре единице. linearHypothesis(ols, c(&quot;x = 1&quot;)) Error in linearHypothesis(ols, c(&quot;x = 1&quot;)): object &#39;ols&#39; not found Посмотрим на остатки :) Протестируем остатки регрессии на нормальность с помощью теста Харке-Бера. \\[ H_{0}: S = 0, K = 3, \\] где S — коэффициент асимметрии (Skewness), K — коэффициент эксцесса (Kurtosis) jarque.bera.test(resid(ols)) Error in resid(ols): object &#39;ols&#39; not found И заодно посмотрим на результаты теста Шапиро – Уилка. \\[ H_{0}: \\epsilon_{i} \\sim N(\\mu,\\sigma^2) \\] shapiro.test(resid(ols)) Error in is.numeric(x): object &#39;ols&#39; not found Оба теста указывают на нормальность распределения остатков регрессии. Сделаем прогноз модели по 20 новым наблюдениям. Будем считать, что новые наблюдения нормально распределены с мат ожиданием и дисперсией set.seed(7) new_data = tibble(x = rnorm(10, mean = 1, sd = 3)) yhat = predict(ols, newdata = new_data, se = TRUE) Error in predict(ols, newdata = new_data, se = TRUE): object &#39;ols&#39; not found yhat Error in eval(expr, envir, enclos): object &#39;yhat&#39; not found 3.2 Python Много полезных функций для статистических расчетов можно найти в пакете Statsmodels. import pandas as pd # работа с таблицами import numpy as np # математика, работа с матрицами import matplotlib.pyplot as plt # графики import statsmodels.api as sm import statsmodels.formula.api as smf import statsmodels.graphics.gofplots as gf import seaborn as sns # еще более классные графики import statsmodels.discrete.discrete_model from statsmodels.stats.outliers_influence import summary_table from scipy.stats import shapiro # еще математика При желании, можем настроить графики по своему вкусу :) plt.style.use(&#39;seaborn&#39;) plt.rc(&#39;font&#39;, size=14) plt.rc(&#39;figure&#39;, titlesize=15) plt.rc(&#39;axes&#39;, labelsize=15) plt.rc(&#39;axes&#39;, titlesize=15) Загрузим данные. df = pd.read_stata(&#39;data/us-return.dta&#39;) # добавить говорящее имя для данных Error in py_call_impl(callable, dots$args, dots$keywords): FileNotFoundError: [Errno 2] No such file or directory: &#39;data/us-return.dta&#39; Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\util\\_decorators.py&quot;, line 208, in wrapper return func(*args, **kwargs) File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\util\\_decorators.py&quot;, line 208, in wrapper return func(*args, **kwargs) File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\io\\stata.py&quot;, line 227, in read_stata chunksize=chunksize, File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\util\\_decorators.py&quot;, line 208, in wrapper return func(*args, **kwargs) File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\util\\_decorators.py&quot;, line 208, in wrapper return func(*args, **kwargs) File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\io\\stata.py&quot;, line 1093, in __init__ self.path_or_buf = open(path_or_buf, &quot;rb&quot;) Избавимся от наблюдений с пропущенными значениями. df.dropna(inplace=True) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; df.reset_index(drop=True, inplace=True) # пояснить, что это Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; Переименуем столбцы. df = df.rename(columns={&#39;A&#39;:&#39;n&#39;, &#39;B&#39;: &#39;date&#39;}) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; Добавим в набор данных объясняемую переменную и регрессор. df[&#39;y&#39;] = df[&#39;MOTOR&#39;] - df[&#39;RKFREE&#39;] Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; df[&#39;x&#39;] = df[&#39;MARKET&#39;] - df[&#39;RKFREE&#39;] Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; Оценим модель и посмотрим на саммари :) regr = smf.ols(&#39;y~x&#39;, data = df).fit() Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; regr.summary() Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;regr&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; Можем посчитать прогнозное значение. df[&#39;yhat&#39;] = regr.fittedvalues # в R добавить для исходных, а сюда для новых Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;regr&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; Красивые графики для остатков, выборосов и прочих радостей, как в R, придется строить ручками. Зато приятно поиграть с оформлением :) fig, ax = plt.subplots() ax.plot(df[&#39;x&#39;],regr.fittedvalues, color=&#39;g&#39;, alpha=0.8) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; ax.scatter(df[&#39;x&#39;],regr.fittedvalues + regr.resid, color = &#39;g&#39;, alpha = 0.8, s = 40) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; ax.vlines(df[&#39;x&#39;],regr.fittedvalues,regr.fittedvalues+regr.resid, color=&#39;gray&#39;, alpha=0.5) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; plt.title(&#39;Линия регрессии и остатки&#39;) plt.xlabel(&#39;RKFREE&#39;) plt.ylabel(&#39;MARKET&#39;) plt.show() Строим доверительный интервал. regr.conf_int() #добавить уровень значимости Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;regr&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; И проведем F-test. hypotheses = &#39;(x = 1)&#39; regr.f_test(r_matrix = hypotheses) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;regr&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; Тест Шапиро - Уилка. Такой же, как и в R. W, p_value = shapiro(regr.resid) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;regr&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; Генерируем новые данные и строим предсказание. import random random.seed(7) newData = df[&#39;x&#39;] + 0.5 * np.random.normal(len(df)) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; prediction = regr.predict(newData) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;regr&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; А теперь жесть! Построим графички, похожие на autoplot R. fig_1 = plt.figure(1) fig_1.axes[0] = sns.residplot(df[&#39;x&#39;], df[&#39;y&#39;], lowess=True, scatter_kws={&#39;alpha&#39;: 0.6}, line_kws={&#39;color&#39;: &#39;red&#39;, &#39;lw&#39;: 2, &#39;alpha&#39;: 0.8}) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; fig_1.axes[0].set_title(&#39;Residuals vs Fitted&#39;) Error in py_call_impl(callable, dots$args, dots$keywords): IndexError: list index out of range Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; fig_1.axes[0].set_xlabel(&#39;Fitted values&#39;) Error in py_call_impl(callable, dots$args, dots$keywords): IndexError: list index out of range Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; fig_1.axes[0].set_ylabel(&#39;Residuals&#39;) # можем добавить метки потенциальных аутлаеров Error in py_call_impl(callable, dots$args, dots$keywords): IndexError: list index out of range Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; abs_resid = abs(regr.resid).sort_values(ascending=False) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;regr&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; abs_resid_top3=abs_resid[:3] Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;abs_resid&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; for i in abs_resid_top3.index: fig_1.axes[0].annotate(i, xy = (regr.fittedvalues[i], regr.resid[i])) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;abs_resid_top3&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; norm_residuals = regr.get_influence().resid_studentized_internal # сохраним стьюдентизированные остатки Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;regr&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; QQ = gf.ProbPlot(norm_residuals) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;norm_residuals&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; fig_2 = QQ.qqplot(line=&#39;45&#39;, alpha=0.5, color=&#39;b&#39;, lw=1) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;QQ&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; fig_2.axes[0].set_title(&#39;Normal Q-Q&#39;) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;fig_2&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; fig_2.axes[0].set_xlabel(&#39;Theoretical Quantiles&#39;) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;fig_2&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; fig_2.axes[0].set_ylabel(&#39;Standardized Residuals&#39;); #и снова метки Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;fig_2&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; abs_norm_resid = np.flip(np.argsort(abs(norm_residuals)), 0) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;norm_residuals&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; abs_norm_resid_top3 = abs_norm_resid[:3] Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;abs_norm_resid&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; for r, i in enumerate(abs_norm_resid_top3): fig_2.axes[0].annotate(i, xy=(np.flip(QQ.theoretical_quantiles, 0)[r], norm_residuals[i])) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;abs_norm_resid_top3&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; fig_3 = plt.figure(3) plt.scatter(regr.fittedvalues, np.sqrt(abs(norm_residuals)), alpha=0.5) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;regr&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; sns.regplot(regr.fittedvalues, np.sqrt(abs(norm_residuals)), scatter=False, ci=False, lowess=True, line_kws={&#39;color&#39;: &#39;red&#39;, &#39;lw&#39;: 1, &#39;alpha&#39;: 0.6}) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;regr&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; fig_3.axes[0].set_title(&#39;Scale-Location&#39;) Error in py_call_impl(callable, dots$args, dots$keywords): IndexError: list index out of range Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; fig_3.axes[0].set_xlabel(&#39;Fitted values&#39;) Error in py_call_impl(callable, dots$args, dots$keywords): IndexError: list index out of range Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; fig_3.axes[0].set_ylabel(&#39;$\\sqrt{|Standardized Residuals|}$&#39;) # и еще раз!) Error in py_call_impl(callable, dots$args, dots$keywords): IndexError: list index out of range Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; abs_sq_norm_resid = np.flip(np.argsort(np.sqrt(abs(norm_residuals)), 0)) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;norm_residuals&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; abs_sq_norm_resid_top3 = abs_sq_norm_resid[:3] Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;abs_sq_norm_resid&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; for i in abs_sq_norm_resid_top3: fig_3.axes[0].annotate(i, xy=(regr.fittedvalues[i], np.sqrt(abs(norm_residuals)[i]))) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;abs_sq_norm_resid_top3&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; leverage = regr.get_influence().hat_matrix_diag # сохраняем элементы матрицы-шляпницы Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;regr&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; cook_dist = regr.get_influence().cooks_distance[0] # и расстояние Кука Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;regr&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; fig_4 = plt.figure(4) plt.scatter(leverage, norm_residuals, alpha=0.5) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;leverage&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; sns.regplot(leverage, norm_residuals, scatter=False, ci=False, lowess=True, line_kws={&#39;color&#39;: &#39;red&#39;, &#39;lw&#39;: 1, &#39;alpha&#39;: 0.8}) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;leverage&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; fig_4.axes[0].set_xlim(0, 0.20) # РАЗВЕСТИ НА ОТДЕЛЬНЫЕ ЧАНКИ ИЛИ MESSAGE = FALSE Error in py_call_impl(callable, dots$args, dots$keywords): IndexError: list index out of range Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; fig_4.axes[0].set_ylim(-3, 5) Error in py_call_impl(callable, dots$args, dots$keywords): IndexError: list index out of range Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; fig_4.axes[0].set_title(&#39;Residuals vs Leverage&#39;) Error in py_call_impl(callable, dots$args, dots$keywords): IndexError: list index out of range Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; fig_4.axes[0].set_xlabel(&#39;Leverage&#39;) Error in py_call_impl(callable, dots$args, dots$keywords): IndexError: list index out of range Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; fig_4.axes[0].set_ylabel(&#39;Standardized Residuals&#39;) Error in py_call_impl(callable, dots$args, dots$keywords): IndexError: list index out of range Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; leverage_top3 = np.flip(np.argsort(cook_dist), 0)[:3] Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;cook_dist&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; for i in leverage_top3: fig_4.axes[0].annotate(i, xy=(leverage[i], norm_residuals[i])) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;leverage_top3&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; plt.show() 3.3 Stata Загружаем данные. use data/us-return.dta r(601); end of do-file r(601); Любуемся и даем новые названия столбцам. summarize ren A n ren B date no variables defined r(111); end of do-file r(111); Убираем пропущенные значения и создаем новые переменные. drop if n == . gen y = MOTOR - RKFREE gen x = MARKET - RKFREE r(111); end of do-file r(111); Строим модель и проверяем гипотезу об адекватности регрессии. Тут же получаем доверительные интервалы для коэффициентов. reg y x r(111); end of do-file r(111); Проверим гипотезу о равенстве коэффициента при регрессоре единице. test x = 1 r(301); end of do-file r(301); Сделаем предсказание по выборке и сохраним остатки. predict u_hat, resid predict y_hat r(301); end of do-file r(301); Протестируем остатки регрессии на нормальность с помощью теста Харке-Бера. На самом деле, это не совсем тест Харке-Бера. Оригинальный вариант ассимптотический и в нем нет поправки на размер выборки. В Stata есть. Подробнее здесь https://www.stata.com/manuals13/rsktest.pdf sktest u_hat r(111); end of do-file r(111); И тест Шапиро-Уилка. Тут все аналогично R. swilk u_hat r(111); end of do-file r(111); Гипотеза о нормальности остатков не отвергается. QQ - график qnorm u_hat График предсказанных значений против остатков. rvfplot, yline(0) График диагональных элементов матрицы-шляпницы против квадрата остатков (по сравнению с R оси поменялись местами). lvr2plot График предсказанных значений против стандартизиованных остатков. Размер точек на графике зависит от расстояния Кука для данного наблюдения. predict D, cooksd predict standard, rstandard graph twoway scatter standard y_hat [aweight=D], msymbol(oh) yline(0) set seed 7 set obs 120 gen x_new = x+ 0.5 * rnormal() gen y_hat_new = .8481496 * x_new + .0052529 obs was 0, now 120 x not found r(111); end of do-file r(111); "],
["multchoice.html", "Коан 4 Модели множественного выбора 4.1 R 4.2 python 4.3 Stata", " Коан 4 Модели множественного выбора 4.1 R Загрузим необходимые пакеты. library(tidyverse) # манипуляции с данными и построени графиков library(skimr) # симпатичное summary library(rio) # чтения .dta файлов library(margins) # расчет предельных эффектов library(mlogit) library(nnet) Импортируем датасет. В нем находятся данные по клиентам пенсионных фондов. Нас интересует переменная pctstck, которая принимает три значения: 0, 50, 100 в зависимоcти от ответа респондента на вопрос о предпочтительном способе инвестирования пенсионных накоплений — в облигации, смешанным способом или в акции. ОЧЕНЬ ДЛИННОЕ ПРЕДЛОЖЕНИЕ!!!!!! df = import(&quot;data/pension.dta&quot;) Error in import(&quot;data/pension.dta&quot;): No such file Начнем с пристального взгляда на описательные статистки. skim(df) Error in as.data.frame.default(data): cannot coerce class &#39;&quot;function&quot;&#39; to a data.frame Отсюда несложно заметить, что переменная choice — бинарная. И принимает значение 1, если индивид в выборке имел право выбора схемы инвестирования. Переменнная wealth98 — чистое богатство пенсионеров на 1989 год. Остальные переменные нас пока что не интересуют :) Для начала разберемся с объясняемой переменной. Превратим её в факторную и упорядочим категории. df = mutate(df, y = factor(pctstck), y = relevel(y, ref = 2)) Error in UseMethod(&quot;mutate_&quot;): no applicable method for &#39;mutate_&#39; applied to an object of class &quot;function&quot; levels(df$y) Error in df$y: object of type &#39;closure&#39; is not subsettable Можно взглянуть на значения объясняемой переменной в разрезе какой-то другой переменной. table(df$y, df$educ) Error in df$y: object of type &#39;closure&#39; is not subsettable Построим модель множественного выбора (лог-линейная модель). multmodel = multinom(y ~ choice + age + educ + wealth89 + prftshr, data = df, reflevel = &#39;0&#39;) Error in as.data.frame.default(data, optional = TRUE): cannot coerce class &#39;&quot;function&quot;&#39; to a data.frame summary(multmodel) Error in summary(multmodel): object &#39;multmodel&#39; not found При необходимости можем построить модельку для подвыборки, например, только для замужних/женатых. multmodel_married = multinom(y ~ choice + age + educ + wealth89 + prftshr, subset = married == 1, data = df, reflevel = &#39;0&#39;) Error in as.data.frame.default(data, optional = TRUE): cannot coerce class &#39;&quot;function&quot;&#39; to a data.frame summary(multmodel_married) Error in summary(multmodel_married): object &#39;multmodel_married&#39; not found Быстренько прикинули значимость коэффициентов. coef(multmodel)/summary(multmodel)$standard.errors Error in coef(multmodel): object &#39;multmodel&#39; not found Сохраним прогнозы. fit_values = fitted(multmodel) Error in fitted(multmodel): object &#39;multmodel&#39; not found И посчитаем относительное изменение отношения шансов: \\[ \\frac{P(y_{i} = j)}{P(y_{i} = 1)} = exp(x_{i}\\beta) \\] показывает изменение отношения шансов при выборе альтернативы j вместо базовой альтернативы 1, если x изменился на единицу. odds.ratio(multmodel) Error in odds.ratio(multmodel): could not find function &quot;odds.ratio&quot; Можем посчитать предельные эффекты в различных квартилях. summary(marginal_effects(multmodel)) Error in marginal_effects(multmodel): object &#39;multmodel&#39; not found Или при заданном значении объясняемых переменных. margins(multmodel, at = list(age = 69, choice = 1)) Error in margins(multmodel, at = list(age = 69, choice = 1)): object &#39;multmodel&#39; not found Теперь посмотрим на модель упорядоченного выбора :) Для нее возьмем другие данные. Выборку позаимствуем из опроса NLSY (National Longitudinal Survey of Youth). В ней представлены данные о 3705 молодых белых женщинах из США. Зависимая переменная tradrole — степень согласия с утверждением «Место женщины дома, а не на работе» по четырехбалльной шкале (1 – категорически не согласна, 2 – не согласна, 3 – согласна, 4 – совершенно согласна). data_nlsy = import(&#39;data/tradrole.dta&#39;) Error in import(&quot;data/tradrole.dta&quot;): No such file #skim(data_nlsy) qplot(data_nlsy, x = tradrole) + xlab(&#39;Ответы респонденток&#39;) + ggtitle(&#39;Вот такие дела, джентельмены :)&#39;) Error in FUN(X[[i]], ...): object &#39;tradrole&#39; not found Посмотрим, как влияет религиозное воспитание (cath — католичество и fpro — протестанство), число лет образования матери — meduc и проживание в крупном городе urb на объясняемую переменную. #сначала в факторные, потом регрессия oprobit = polr(as.factor(tradrole) ~ as.factor(cath) + as.factor(fpro) + meduc + as.factor(urb), data = data_nlsy, method = &quot;probit&quot;, na.action = na.omit) Error in polr(as.factor(tradrole) ~ as.factor(cath) + as.factor(fpro) + : could not find function &quot;polr&quot; summary(oprobit) Error in summary(oprobit): object &#39;oprobit&#39; not found В summary видим коэффициенты при регрессорах и коэффициенты при константах для каждой из упорядоченных альтернатив. summary(oprobit) Error in summary(oprobit): object &#39;oprobit&#39; not found 4.2 python import numpy as np import pandas as pd import statsmodels.api as st import matplotlib.pyplot as plt plt.style.use(&#39;ggplot&#39;) df = pd.read_stata(&#39;data/pension.dta&#39;) Error in py_call_impl(callable, dots$args, dots$keywords): FileNotFoundError: [Errno 2] No such file or directory: &#39;data/pension.dta&#39; Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\util\\_decorators.py&quot;, line 208, in wrapper return func(*args, **kwargs) File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\util\\_decorators.py&quot;, line 208, in wrapper return func(*args, **kwargs) File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\io\\stata.py&quot;, line 227, in read_stata chunksize=chunksize, File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\util\\_decorators.py&quot;, line 208, in wrapper return func(*args, **kwargs) File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\util\\_decorators.py&quot;, line 208, in wrapper return func(*args, **kwargs) File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\io\\stata.py&quot;, line 1093, in __init__ self.path_or_buf = open(path_or_buf, &quot;rb&quot;) df.describe() Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; df.rename(columns = {&#39;pctstck&#39;:&#39;y&#39;}, inplace = True) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; Подготовим данные для построения модели множественного выбора. Избавимся от пропусков в интересующих нас переменных и добавим вектор констант. sub = df[[&#39;y&#39;, &#39;choice&#39;, &#39;age&#39;, &#39;wealth89&#39;, &#39;prftshr&#39;, &#39;educ&#39;, &#39;married&#39;]].dropna() Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; y = sub[&#39;y&#39;] Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;sub&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; X = sub[[&#39;choice&#39;, &#39;age&#39;, &#39;wealth89&#39;, &#39;prftshr&#39;]] Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;sub&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; X = st.add_constant(X, prepend=False) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;X&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; Кросс - табличка для объясняемой переменной и числа лет образования. pd.crosstab(sub[&#39;y&#39;], sub[&#39;educ&#39;]) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;sub&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; Строим модель. multmodel = st.MNLogit(y, X, ) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;y&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; mm_fit = multmodel.fit() Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;multmodel&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; mm_fit.summary() ### сразу же можно проверить значимость коэффициентов Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;mm_fit&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; fitted_values = mm_fit.predict() Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;mm_fit&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; Отдельно можем извлечь параметры. mm_fit.params Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;mm_fit&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; Для того, чтобы построить модельку по подвыборке, её (подвыборку) нужно создать :) data_m = sub[(sub.married == 1)] Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;sub&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; y_m = data_m[&#39;y&#39;] Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;data_m&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; X_m = data_m[[&#39;choice&#39;, &#39;age&#39;, &#39;wealth89&#39;, &#39;prftshr&#39;]] Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;data_m&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; X_m = st.add_constant(X_m, prepend = False) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;X_m&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; Дальше всё аналогично :) multmodel_m = st.MNLogit(y_m, X_m) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;y_m&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; mm_fit_m = multmodel_m.fit() Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;multmodel_m&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; mm_fit_m.summary() Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;mm_fit_m&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; C пределными эффектами в питоне беда!!!! margeff = mm_fit.get_margeff() Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;mm_fit&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; np.round(margeff.margeff, 3) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;margeff&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; Или все-таки беда с отношением шансов? y50_data = sub[sub[&#39;y&#39;] == 50][sub.columns.difference([&#39;y&#39;, &#39;married&#39;])] Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;sub&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; y100_data = sub[sub[&#39;y&#39;] == 100][sub.columns.difference([&#39;y&#39;, &#39;married&#39;])] #np.exp(mm_fit.params[0]*y100_data) # кажется, это придется считать вручную :( #np.exp(mm_fit.params[0]*y100_data) # не уверена, что так, но пусть пока будет Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;sub&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; И вернемся к сильным и независимым моделькам упорядоченного выбора :) data_nlsy = pd.read_stata(&#39;data/tradrole.dta&#39;) Error in py_call_impl(callable, dots$args, dots$keywords): FileNotFoundError: [Errno 2] No such file or directory: &#39;data/tradrole.dta&#39; Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\util\\_decorators.py&quot;, line 208, in wrapper return func(*args, **kwargs) File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\util\\_decorators.py&quot;, line 208, in wrapper return func(*args, **kwargs) File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\io\\stata.py&quot;, line 227, in read_stata chunksize=chunksize, File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\util\\_decorators.py&quot;, line 208, in wrapper return func(*args, **kwargs) File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\util\\_decorators.py&quot;, line 208, in wrapper return func(*args, **kwargs) File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\io\\stata.py&quot;, line 1093, in __init__ self.path_or_buf = open(path_or_buf, &quot;rb&quot;) plt.hist(data_nlsy[&#39;tradrole&#39;]) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;data_nlsy&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; plt.title(&#39;&#39;) plt.xlabel(&#39;Ответы респонденток&#39;) plt.show(&#39;Вот такие дела, джентельмены :)&#39;) Дальше тоже пока печаль :( 4.3 Stata use data/pension.dta r(601); end of do-file r(601); sum end of do-file ren pctstck y r(111); end of do-file r(111); Построим модель множественного выбора (лог-линейная модель). mlogit y choice age educ wealth89 prftshr, baseoutcome(0) r(111); end of do-file r(111); Кросс - табличка для объясняемой переменной и числа лет образования. table y educ r(111); end of do-file r(111); Можем получить прогнозы вероятностей. predict p1 p2 p3, p r(301); end of do-file r(301); И посчитать относительное изменение отношения шансов: \\[ \\frac{P(y_{i} = j)}{P(y_{i} = 1)} = exp(x_{i}\\beta) \\] - показывает изменение отношения шансов при выборе альтернативы j вместо альтернативы 0, если x изменился на единицу. В stata, в отличие от R, отношение шансов называется relative-risk ratio. mlogit, rrr r(301); end of do-file r(301); Можем посчитать предельные эффекты в разных точках. margins, predict(outcome(0)) dydx(choice age educ wealth89 prftshr) atmeans margins, predict(outcome(0)) dydx(choice age educ wealth89 prftshr) at((p25) *) margins, predict(outcome(0)) dydx(choice age educ wealth89 prftshr) at(age = 69 choice = 0) r(301); end of do-file r(301); И вернемся к сильным и независимым моделькам упорядоченного выбора :) use data/tradrole.dta sum r(601); end of do-file r(601); !Нужно добавить название к графику hist tradrole r(111); end of do-file r(111); Посмотрим, как влияет религиозное воспитание (cath - католичество и fpro - протестанство), число лет образования матери - meduc и проживание в крупном городе urb на объясняемую переменную. oprobit tradrole i.cath i.fpro meduc i.urb r(111); end of do-file r(111); "],
["poisreg.html", "Коан 5 Модели счетных данных 5.1 R 5.2 Python 5.3 Stata", " Коан 5 Модели счетных данных 5.1 R Загрузим необходимые пакеты. library(tidyverse) # манипуляции с данными и построение графиков library(sjPlot) # визуализация моделей library(skimr) # симпатичное summary library(rio) # чтение .dta файлов library(MASS) # отрицательное биномиальное распределение library(lmtest) # проверка гипотез library(pscl) # zero-inflation function library(margins) # для подсчета предельных эффектов Импортируем данные. df_fish = rio::import(file = &quot;data/fish.dta&quot;) Error in rio::import(file = &quot;data/fish.dta&quot;): No such file Данные содержат информацию о количестве рыбы, пойманной людьми на отдыхе. Camper - наличие/отсутствие палатки. Child - количество детей, которых взяли на рыбалку. Persons - количество людей в группе. Count - количество пойманной рыбы Посмотрим нам описательные статистики. skim(df_fish) Error in is.data.frame(data): object &#39;df_fish&#39; not found Переменная camper принимает всего два значения, поэтому превратим ее в факторную переменную. df_fish = mutate(df_fish, camper = factor(camper)) Error in mutate(df_fish, camper = factor(camper)): object &#39;df_fish&#39; not found Наша задача - по имеющимся данным предсказать улов. Для начала посмотрим на распределение объясняемой переменной count. ggplot(df_fish, aes(x = count)) + geom_histogram(binwidth = 1) + labs(x = &#39;count&#39;, y = &#39;frequency&#39;, title = &#39;Distribution of count variable&#39;) Error in ggplot(df_fish, aes(x = count)): object &#39;df_fish&#39; not found Предположим, что переменная имеет распределение Пуассона. Будем использовать пуассоновскую регрессию. \\[ P(y=k)=exp(-\\lambda) \\lambda^k / k! \\] где \\(\\lambda=\\exp(b_1 +b_2*x)\\) poisson_model = glm(count ~ child + camper + persons, family = &quot;poisson&quot;, data = df_fish) Error in is.data.frame(data): object &#39;df_fish&#39; not found summary(poisson_model) Error in summary(poisson_model): object &#39;poisson_model&#39; not found Посчитаем средний предельный эффект для каждой переменной. m = margins(poisson_model) Error in margins(poisson_model): object &#39;poisson_model&#39; not found summary(m) Error in summary(m): object &#39;m&#39; not found cplot(poisson_model, x = &#39;persons&#39;, what = &#39;effect&#39;, title = &#39;Предельный эффект переменной camper&#39;) Error in cplot(poisson_model, x = &quot;persons&quot;, what = &quot;effect&quot;, title = &quot;Предельный эффект переменной camper&quot;): object &#39;poisson_model&#39; not found margins(poisson_model, at = list(child = 0:1)) Error in margins(poisson_model, at = list(child = 0:1)): object &#39;poisson_model&#39; not found plot_model(poisson_model, type = &#39;pred&#39;) Error in insight::model_info(model): object &#39;poisson_model&#39; not found plot_model(poisson_model, type = &quot;pred&quot;, terms = c(&quot;child [0, 0, 1]&quot;, &quot;persons [1,3]&quot;)) Error in insight::model_info(model): object &#39;poisson_model&#39; not found Однако, заметим, что дисперсия и среднее значение объясняемой переменной не равны, как это предполагает распределение Пуассона. df_fish %&gt;% group_by(camper) %&gt;% summarize(var = var(count), mean = mean(count)) Error in eval(lhs, parent, parent): object &#39;df_fish&#39; not found Оценим регрессию, предполагая отрицательное биномиальное распределение остатков. В этом случае, дисперсия распределения зависит от некоторого параметра и не равна среднему. nb1 = glm.nb(count ~ child + camper + persons, data = df_fish) Error in is.data.frame(data): object &#39;df_fish&#39; not found summary(nb1) Error in summary(nb1): object &#39;nb1&#39; not found Попробуем исключить из модели переменную camper и сравним качество двух моделей. nb2 = update(nb1, . ~ . - camper) Error in update(nb1, . ~ . - camper): object &#39;nb1&#39; not found waldtest(nb1, nb2) Error in waldtest(nb1, nb2): object &#39;nb1&#39; not found Можем посмотреть на результаты модели с “раздутыми нулями” (zero-inflated). Они предполагают большую частоту нулевых наблюдений. zero_infl = zeroinfl(count ~ child + camper | persons, data = df_fish, dist = &#39;negbin&#39;) Error in is.data.frame(data): object &#39;df_fish&#39; not found summary(zero_infl) Error in summary(zero_infl): object &#39;zero_infl&#39; not found plot_model(zero_infl, type = &#39;pred&#39;) Error in insight::model_info(model): object &#39;zero_infl&#39; not found 5.2 Python Загрузим ужные пакетики. import pandas as pd # работа с таблицами import numpy as np # математика, работа с матрицами import matplotlib.pyplot as plt # графики import statsmodels.api as sm import statsmodels.formula.api as smf import statsmodels.graphics.gofplots as gf from statsmodels.stats.outliers_influence import summary_table import seaborn as sns # еще более классные графики from scipy.stats import shapiro # еще математика import statsmodels.discrete.discrete_model from statsmodels.discrete.count_model import ZeroInflatedPoisson plt.style.use(&#39;ggplot&#39;) Загружаем данные и смотрим описательные статистики. df_fish = pd.read_stata(&#39;data/fish.dta&#39;) Error in py_call_impl(callable, dots$args, dots$keywords): FileNotFoundError: [Errno 2] No such file or directory: &#39;data/fish.dta&#39; Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\util\\_decorators.py&quot;, line 208, in wrapper return func(*args, **kwargs) File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\util\\_decorators.py&quot;, line 208, in wrapper return func(*args, **kwargs) File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\io\\stata.py&quot;, line 227, in read_stata chunksize=chunksize, File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\util\\_decorators.py&quot;, line 208, in wrapper return func(*args, **kwargs) File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\util\\_decorators.py&quot;, line 208, in wrapper return func(*args, **kwargs) File &quot;C:\\Users\\DNS\\ANACON~1\\lib\\site-packages\\pandas\\io\\stata.py&quot;, line 1093, in __init__ self.path_or_buf = open(path_or_buf, &quot;rb&quot;) Посмотрим, как выглядит распределение объясняемой переменной. sns.distplot(df_fish[&#39;count&#39;]) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df_fish&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; plt.show() Превращаем переменную camper в категориальную. df_fish[&#39;camper&#39;] = df_fish[&#39;camper&#39;].astype(&#39;category&#39;) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df_fish&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; Строим Пуассоновскую регрессию. regr_pois = smf.glm(&#39;count ~ child + camper + persons&#39;, data=df_fish, family=sm.families.Poisson()).fit() Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df_fish&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; regr_pois.summary() Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;regr_pois&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; Посмотрим, равны ли среднее значение и дисперсия, как это предполагает распределение Пуассона. (df_fish .filter([&#39;count&#39;, &#39;camper&#39;]) .groupby(&#39;camper&#39;) .agg([&#39;mean&#39;, &#39;var&#39;])) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df_fish&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; И регрессию с остатками, имеющими отрицательное биномиальное распределение. regr_bin = smf.glm(&#39;count ~ child + camper + persons&#39;, data=df_fish, family=sm.families.NegativeBinomial()).fit() Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df_fish&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; regr_bin.summary() Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;regr_bin&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; Проверим гипотезу о равенстве 0 коэффициента при переменной camper. Для этого проведем тест Вальда. hyp = &#39;(child = 0)&#39; regr_bin.wald_test(hyp) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;regr_bin&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; Видим, что p-value очень маленькое. Значит, гипотеза о незначимости коэффициента при переменной camper отвергается. Посчитаем средний предельный эффект для каждой переменной. pred = regr_pois.fittedvalues Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;regr_pois&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; mean_mef_child = np.mean([regr_pois.params[1]*p for p in pred]) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;pred&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; mean_mef_camper = np.mean([regr_pois.params[2]*p for p in pred]) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;pred&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; data_1 = pd.DataFrame({&#39;child&#39;: df_fish[&#39;child&#39;], &#39;camper&#39;: 1, &#39;persons&#39;: df_fish[&#39;persons&#39;]}) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df_fish&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; data_0 = pd.DataFrame({&#39;child&#39;: df_fish[&#39;child&#39;], &#39;camper&#39;: 0, &#39;persons&#39;: df_fish[&#39;persons&#39;]}) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df_fish&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; mean_mef_persons = np.mean([(regr_pois.predict(data_1)[i]-regr_pois.predict(data_0)[i]) for i in range(len(df_fish))]) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;df_fish&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 2, in &lt;module&gt; plot_model(regr_pois, type=&#39;effect&#39;, terms=&#39;camper&#39;) Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name &#39;plot_model&#39; is not defined Detailed traceback: File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt; И модель с раздутыми нулями. (которая у меня не получилась :( ) 5.3 Stata Загружаем данные и смотрим описательные статистики. use data/fish.dta summarize r(601); end of do-file r(601); hist count Строим Пуассоновскую регрессию. AIC, который мы видим в описательных статистиках, рассчитан по следующей формуле: \\(AIC = -2log(L) + 2k\\) \\(AIC = -2log(L) + klog(N)\\) где L — значение функции правдоподобия модели, k — количество переменных, N — число наблюдений. glm count camper child persons, family(poisson) r(111); end of do-file r(111); Можем посчитать AIC и BIC по другой формуле и получить результат, аналогичный выводу в R. \\(AIC = \\frac {-2log(L) + 2k}{N}\\) estat ic r(301); end of do-file r(301); Посмотрим, равны ли среднее значение и дисперсия, как это предполагает распределение Пуассона. tabstat count, by(camper) stat(mean, variance) nototal r(111); end of do-file r(111); Предположим, что остатки имеют отрицательное биномиальное распределение. nbreg count child camper persons r(111); end of do-file r(111); Проверим гипотезу о равенстве 0 коэффицинта при переменной camper. Проведем тест Вальда. quietly: nbreg count child i.camper persons test i.camper r(111); end of do-file r(111); Посчитаем средний предельный эффект для каждой переменной. margins, dydx(*) marginsplot И модель с раздутыми нулями. zinb count child i.camper, inflate(persons) r(111); end of do-file r(111); "]
]
